syntax = "proto3";
package user.api;

option go_package = "github.com/alexeyzer/user";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

 service userApiService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/user"
      body: "*"
    };
  };
   rpc GetUserBySession(google.protobuf.Empty) returns (CreateUserResponse) {
     option (google.api.http) = {
       get: "/v1/user"
     };
   };

   rpc Login(LoginRequest) returns (CreateUserResponse) {
     option (google.api.http) = {
       post: "/v1/login"
       body: "*"
     };
   };

   rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty) {
     option (google.api.http) = {
       post: "/v1/logout"
       body: "*"
     };
   };

   rpc SessionCheck(google.protobuf.Empty) returns (SessionCheckResponse) {
     option (google.api.http) = {
       post: "/v1/session/check"
       body: "*"
     };
   };

   rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {
     option (google.api.http) = {
       post: "/v1/role"
       body: "*"
     };
   };

   rpc DeleteRole(DeleteRoleRequest) returns (google.protobuf.Empty) {
     option (google.api.http) = {
       delete: "/v1/role"
     };
   };

   rpc GetRole(GetRoleRequest) returns (GetRoleResponse) {
     option (google.api.http) = {
       get: "/v1/role"
     };
   };

   rpc ListRoles(google.protobuf.Empty) returns (ListRolesResponse) {
     option (google.api.http) = {
       get: "/v1/role/list"
     };
   };

 }

 message DeleteRoleRequest {
   int64 id = 1;
 }

 message CreateRoleRequest {
   string name = 1;
   string description = 2;
 }

 message CreateRoleResponse {
   int64 id = 1;
   string name = 2;
   string description = 3;
 }

 message GetRoleRequest {
   int64 id = 1;
 }

 message GetRoleResponse {
   int64 id = 1;
   string name = 2;
   string description = 3;
 }

message SessionCheckResponse {
  string username = 1;
}

message ListRolesResponse {
   repeated GetRoleResponse roles = 1;
}

message LoginRequest {
  string email = 1 [(validate.rules).string.email = true];
  string password = 2 [(validate.rules).string = {min_len: 1, max_len: 600}];
}

 message CreateUserRequest {
    string name = 1 [(validate.rules).string = {min_len: 1, max_len: 100}];
    string password = 2 [(validate.rules).string = {min_len: 1, max_len: 600}];
    string surname = 3 [(validate.rules).string = {min_len: 1, max_len: 100}];
    string patronymic = 4 [(validate.rules).string = {min_len: 1, max_len: 100}];
    string phone = 5;
    string email = 6 [(validate.rules).string.email = true];
 }

 message CreateUserResponse {
   int64 id = 1;
   string name = 2;
   string surname = 3;
   string patronymic = 4;
   string phone = 5;
   string email = 6;
 }